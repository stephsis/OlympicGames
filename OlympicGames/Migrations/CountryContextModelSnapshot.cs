// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGames.Models;

#nullable disable

namespace OlympicGames.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OlympicGames.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "in",
                            CategoryName = "Indoor"
                        },
                        new
                        {
                            CategoryId = "out",
                            CategoryName = "Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Countries", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlagImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "can",
                            CategoryID = "in",
                            CountryName = "Canada",
                            FlagImage = "can.png",
                            GameID = "wint"
                        },
                        new
                        {
                            CountryID = "swe",
                            CategoryID = "in",
                            CountryName = "Sweden",
                            FlagImage = "swe.png",
                            GameID = "wint"
                        },
                        new
                        {
                            CountryID = "gb",
                            CategoryID = "in",
                            CountryName = "Great Britain",
                            FlagImage = "gb.png",
                            GameID = "wint"
                        },
                        new
                        {
                            CountryID = "jam",
                            CategoryID = "in",
                            CountryName = "Jamaica",
                            FlagImage = "jam.png",
                            GameID = "wint"
                        },
                        new
                        {
                            CountryID = "bra",
                            CategoryID = "out",
                            CountryName = "Brazil",
                            FlagImage = "bra.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "net",
                            CategoryID = "out",
                            CountryName = "Netherlands",
                            FlagImage = "net.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "out",
                            CountryName = "USA",
                            FlagImage = "usa.png",
                            GameID = "sum"
                        },
                        new
                        {
                            CountryID = "tha",
                            CategoryID = "in",
                            CountryName = "Thailand",
                            FlagImage = "tha.png",
                            GameID = "para"
                        },
                        new
                        {
                            CountryID = "uru",
                            CategoryID = "in",
                            CountryName = "Uruguay",
                            FlagImage = "uru.png",
                            GameID = "para"
                        },
                        new
                        {
                            CountryID = "ukr",
                            CategoryID = "in",
                            CountryName = "Ukraine",
                            FlagImage = "ukr.png",
                            GameID = "para"
                        },
                        new
                        {
                            CountryID = "fra",
                            CategoryID = "in",
                            CountryName = "France",
                            FlagImage = "fra.png",
                            GameID = "you"
                        },
                        new
                        {
                            CountryID = "rus",
                            CategoryID = "in",
                            CountryName = "Russia",
                            FlagImage = "rus.png",
                            GameID = "you"
                        },
                        new
                        {
                            CountryID = "por",
                            CategoryID = "out",
                            CountryName = "Portugal",
                            FlagImage = "por.png",
                            GameID = "you"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "wint",
                            GameName = "Winter"
                        },
                        new
                        {
                            GameID = "sum",
                            GameName = "Summer"
                        },
                        new
                        {
                            GameID = "para",
                            GameName = "Paralympics"
                        },
                        new
                        {
                            GameID = "you",
                            GameName = "Youth"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Countries", b =>
                {
                    b.HasOne("OlympicGames.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicGames.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
